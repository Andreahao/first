1. 运行Javascript
	直接在电脑硬盘上创建HTML和Javascript文件，用浏览器打开。这种方式以file://打开的地址，无法联网。还需架设一个web服务器，以http://开头的地址来执行javascript代码。
2. 字符串	
	a. 转义字符\可以转义很多字符，\n(换行)，\t(制表符)，\本身也要转义，所以\\（\）
	
	b. 多行字符串：
			多行字符串用\n很繁琐，ES6新增了多行字符串的表示方法，用反引号``表示
	c. 连接多个字符串：
			（1）用+号；
			（2）模板字符串，ES6新增的一种模板字符串，用反引号``包含字符串，字符串的变量用${变量}表示，会自动替换变量。
				例如：var name=`小明`;
					  var age=20;
					  var message=`你好，${name},你今年${age}岁了！`
					  alert(message)
	d.操作字符串：
			（1）.length字符串长度。    eg:  var s='hello world';
										     alert(s.length)  //11
			（2）[n]返回字符串第n个字母，从0开始计数。   eg: alert(s[0])//h
		
	e. 操作字符串的方法：
			（1）.toUpperCase()把字符串全部变成大写。 eg:var s='hello';
														alert(s.toUpperCase()); //HELLO		
			（2）.toLowerCase()把字符串全部变成小写。
			（3）.indexOf()指定返回的字符串在字符串中的位置，没有返回-1.  eg:var s='hello world';
																			alert(s.indexOf('world'))//6
			（4）.substring(a,b)返回[a,b)区间的字符串。 eg:alert(s.substring(7,8))//o
3. 数组
	jsvascript的Array可以包含任意数据类型，通过索引访问每个元素。
	a. arr.langth 返回数组长度  eg: var arr=['one','two','three','four','five'];
									alert(arr.length);//5
		注意：直接给数组长度赋值，会导致数组改变长度。   eg:arr.length=3;
															alert(arr)//['one','two','three']
															alert(arr.length)//3
	b. Array[n]=新值；Arry通过索引，把对应元素值改变，直接改变数组。
		注意：通过索引赋值，如果索引值超过原数组的长度，数组长度改变为新赋值的长度。
				eg:arr[7]='seven';
				console.log(arr) //['one','two','three',empty*4,'seven']
	c. 操作数组方法
		（1）.indexOf(数组值) 返回数组值在数组中的索引值。 eg:alert(arr.indexOf('one')) //0
		（2）.slice(a,b)截取数组的[a,b)区间的数组值，组成新的数组  eg:arr=['10','20','30','40','50'];
																console.log(arr.slice(0,3));//['10','20','30']
				注意：如果不传参数值，从零到未截取数组，相当于复制数组。
		（3）.push()向数组末尾添加若干元素 .pop()删除数组末尾元素
		（4）.unshift()想数组头部添加若干元素 .shift()删除数组头部元素
		（5）.sort（）对数组进行默认排序，直接调用时，按照默认顺序
		（6）.reverse()反转数组
		（7）.concat(数组)将当前数组与新数组链接组成新的数组  eg:var arr=['11','22','33']
																 arr.concar(['one','two'])//arr=['11','22','33','one','two']
				注意：原数组不改变
		（8）.join()将数组元素转换成字符串，用链接号链接成字符串，默认用‘,’链接，可指定链接号.join('-').
4. 对象
	Javascript对象是一种无序的若干键值对集合组成的数据类型；
		对象的所有属性都是字符串，属性对应的值可以是任意数据类型。
		Javascript对象是动态类型，可以添加和删除对象属性
	{...}表示一个对象；
	键值对以xxx:xxx形式声明，用‘，’隔开。最后一个键值对不需要‘，’，否则有可能报错。
		a. eg: var xiaoming={
			name:'小明'，
			age：24；
			birth:1993,
			
			}
			访问属性是通过 . 操作符完成，但要求属性名必须是一个有效的变量名。
		
			获取属性：xiaoming.age  //24
		
		b.若属性名若包含特殊字符，必须用''括起来。
			var xiaohua={
				name:'小花'，
				age：20，
				'middle-school':'No1 middle school'
			}
			访问属性无法使用 . 操作符，必须用['xxx']访问。
			xiaohua['middle-school'];// 'No1 middle school'
		c. 增加、删除对象属性
			xiaoming.school='No2 middle school'
			delete xiaoming.age;
		d. in 检测对象中的某一属性(对象集成==继承得到的属性，也可返回  eg:'toString' in xiaoming toString是定义在object中，所有对象最终都会指向object，所以xiaoming也有toString属性)  eg: 'age' in xiaoming //true
				hasOwnProperty()判断是自身拥有属性，非继承  eg:xiaoming.hasOwnProperty('name')
5. 条件判断
	条件判断的结果不是true/false.Javascript把null、undefined、0、NaN和空字符串’‘视为false.
6. 循环
	for循环(已知循环的初始条件和结束条件时非常有用)
		循环的3个条件可以省略，省略后就没有退出循环的条件，就是死循环。可以用if条件判断使用break语句退出循环。
		if条件判断使用continue只是跳出满足if条件的此次循环，然后继续执行下一次循环。
	 for...in 循环（是for循环的一个变体）可以把一个对象的所有属性依次循环出
		eg: var xiaoming={name:'小明',age:20,school:'No1 middle school'}
			for(var key in xiaoming) {
				console.log(key);  //name,age,school 
				console.log(xiaoming[key])  //小明，20，No1 middle school
			} 
		数组也是对象，每个元素的索引视为对象的属性，for...in循环直接输出索引
			eg: var arr=['first','twive','third'];
				for(var key in arr){
					console.log(key);  //0,1,2
					console.log(arr[key]) //first,twive,third
				}
	while循环
		满足条件循环
	do...while循环
7. Map和Set
	javascript默认对象表示方式为{}，但键必须是字符串，实际上number和其他数据类型作为键也是非常合理的。于是ES6引入新的数据类型Map和Set.
	
	Map是一组键值对的结构，具有极快的查找速度。
		初始化Map需要一个二维数组，或直接初始化一个空Map。
		eg：var m=new Map([['micheal',95],['andrea',100],['json',80]]);
		eg: var m=new Map();
		
		Map方法：m.set('adam',74);//添加一个新的键值
				 m.has('adam');//查找是否存在‘adam’,true
				 m.get('adam');//获取adam对应的值，74
				 m.delete('adam');//删除‘adam’键
				 
	Set和Map类似，但只存储key不存储value,key值不能重复,重复元素会自动过滤。
		创建Set需要一个Array作为输入，或直接创建一个空Set.
		eg:var s=new Set([1,2,3,'3']);
		   var s=new Set();
		   
		Set方法：s.add();//添加元素到Set中
				 s.delete();//删除元素
	
	
		 
		